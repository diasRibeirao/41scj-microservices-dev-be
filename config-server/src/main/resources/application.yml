server:
  port: ${PORT:8888}

#eureka:
#  instance:
#    instance-id: >-
#      ${spring.application.name}:${spring.application.instance_id:${server.port}}
#  client:
#    service-url:
#      defaultZone: http://localhost:8761/eureka 

eureka:
  client:
    registerWithEureka: ${REGISTER_WITH_EUREKA:true}
    fetchRegistry: ${FETCH_REGISTRY:false}
    service-url:
      defaultZone: ${EUREKA_DEFAULT_ZONE:http://localhost:8761/eureka/}
  instance:
    hostname: ${HOST_NAME:${spring.application.name}}  # work on swarm
    preferIpAddress: ${PREFER_IP_ADDRESS:true}
    # enable to register multiple app instances with a random server port
    instance-id: >-
      ${spring.application.name}:${spring.application.instance_id:${random.value}}
    leaseRenewalIntervalInSeconds: ${LEASE_RENEWAL_INTERVAl_IN_SECONDS:10}
    leaseExpirationDurationInSeconds: ${LEASE_EXPIRATION_DURATIONIN_SECONDS:20}
        
# Configurações para acessar o File Systems
#spring:
#  application:
#    name: config-server
#  profiles: 
#    active: native
#  cloud:
#    config:
#      server:
#        native:
#          search-locations: classpath:/microservices-configs
          
# Configurações para acessar um repositório na nuvem (GitHub)
spring:
  application:
    name: config-server
  cloud:
    config:
      server:
        git:
          uri: https://github.com/diasRibeirao/41scj-microservices-dev-configs
          username: ${GITHUB_USER}
          password: ${GITHUB_TOKEN}
          default-label: master
          search-paths:
          - '*-service'
          clone-on-start: true
          
 
